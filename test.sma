/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <sqlx>

#define HOST "127.0.0.1"
#define USER "root"
#define PASS ""
#define DB "test"

enum MYSQL_TYPE
{
	MYSQL_CHECK_PLAYER,
	MYSQL_IGNORE_HANDLED
}

new bool:g_isPlaying[MAX_PLAYERS]
new g_iUserName[MAX_PLAYERS][32]

new Handle:SQL_Tuple
new Handle:SQL_Conn
new attemps

public plugin_init()
{
	register_forward(FM_ClientDisconnect, "pfn_ClientDisconnect")
}

public plugin_cfg()
{
	SQL_SetAffinity("mysql")
	SQL_Tuple = SQL_MakeDbTuple(HOST, USER, PASS, DB)
	attemps = 0
	plugin_sql()
}

public plugin_sql() // Thx Sugisaki
{
	new errno, error[64]
	SQL_Conn = SQL_Connect(SQL_Tuple, errno, error, charsmax(error))
	
	if(errno)
	{
		log_amx("ERROR %i: %s", errno, error)
		attemps += 1
		if(attemps >= 3)
		{
			set_fail_state("Error al conectar a la base de datos.")
			return
		}
		set_task(10.0, "plugin_sql")
		return
	}
	attemps = 0
	server_print("Conexion exitosa con la base de datos.")
}

public plugin_end()
{
	SQL_FreeHandle(SQL_Conn)
}

public client_putinserver(id)
{
	get_user_name(id, g_iUserName[id], charsmax(g_iUserName[]))
	g_isPlaying[id] = false
	
	mysql_query(MYSQL_CHECK_PLAYER, id, "SELECT * FROM users WHERE nombre=^"%s^"", g_iUserName[id])
}

public pfn_ClientDisconnect(id)
{
	if(g_isPlaying[id])
	{
		mysql_query(MYSQL_IGNORE_HANDLED, id, "UPDATE users SET frags = 1 WHERE nombre = ^"%s^"", g_iUserName[id])
	}
	g_isPlaying[id] = false
}

stock mysql_query(MYSQL_TYPE:type, const id, const query[], any:...)
{
	static buffer[512]
	static data[3]
	
	vformat(buffer, charsmax(buffer), query, 4)
	
	data[0] = id
	data[1] = _:type
	
	SQL_ThreadQuery(SQL_Tuple, "DataHandled", buffer, data, charsmax(data))
}

public DataHandled(failstate, Handle:query, error[], errnum, data[], size, Float:queuetime)
{
	if(failstate != TQUERY_SUCCESS)
	{
		log_to_file("mysql_error.txt", "DATA: %i - ERROR %i: %s", data[1], errnum, error)
		return PLUGIN_HANDLED
	}
	
	switch(data[1])
	{
		case MYSQL_CHECK_PLAYER:
		{
			new id = data[0]
			if(SQL_NumResults(query) > 0)
			{
				server_print("Hola: %d", SQL_ReadResult(query, 0))
				SQL_FreeHandle(query)
				server_print("El usuario <%s> ya estaba registrado.", g_iUserName[id])
				g_isPlaying[id] = true
			}
			else
			{
				server_print("El usuario <%s> se esta registrando.", g_iUserName[id])
				SQL_FreeHandle(query)
				mysql_query(MYSQL_IGNORE_HANDLED, id, "INSERT INTO users (`nombre`) VALUES (^"%s^")", g_iUserName[id])
				g_isPlaying[id] = true
			}
		}
		case MYSQL_IGNORE_HANDLED:
		{
			if(!query)
			{
				log_to_file("consultas_fallidas.txt", "Una consulta no pudo realizarse.")
			}
			SQL_FreeHandle(query)
		}
	}
	return PLUGIN_HANDLED
}
